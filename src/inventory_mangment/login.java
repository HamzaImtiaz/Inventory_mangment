/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory_mangment;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Hamza Imtiaz
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
     public static String Type=null;
   public static Connection conn = null;
   public static String user_name=null;
   public static String view_redirected=null;
    public login() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        Login = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Login");

        username.setText("Hamza");
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        Login.setText("OK");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        Login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LoginKeyPressed(evt);
            }
        });

        password.setText("123456");
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        jLabel4.setText("Forgot Password?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Login)
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(password))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(Login)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        // TODO add your handling code here:

        if(username.getText().length()==0)  // Checking for empty field
        {
            System.out.println("No Entry in text filed");
            JOptionPane.showMessageDialog(null,"No text in username textfield");
        }
        else if(password.getPassword().equals("null")) { // Checking for empty field
            System.out.println("No Entry in password filed");
            JOptionPane.showMessageDialog(null,"No text in password textfield");}
        else{
            String user = username.getText();   // Collecting the input
            String  pass = new String(password.getPassword());

            // String pwd = String.copyValueOf(pass);  // converting from array to string
            if(validate_login(user,pass))
            {
                user_name=username.getText().toString();

                if(Type.equals("Admin"))
                {

                    Main_page obj = null;
                    try {
                        obj = new Main_page();
                    } catch (Exception ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    obj.setVisible(true);
                    this.setVisible(false);
                }
                //            else{
                    //         screen1.setVisible(rootPaneCheckingEnabled);
                    //          this.setVisible(false);
                    //          System.out.println("Ok"); }

            }
            else
            JOptionPane.showMessageDialog(null,"Incorrect Username or Login");
        }

    }//GEN-LAST:event_LoginActionPerformed

    private void LoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(username.getText().length()==0)  // Checking for empty field
            {
                System.out.println("No Entry in text filed");
                JOptionPane.showMessageDialog(null,"No text in username textfield");
            }
            else if(password.getPassword().equals("null")) { // Checking for empty field
                System.out.println("No Entry in password filed");
                JOptionPane.showMessageDialog(null,"No text in password textfield");}
            else{
                String user = username.getText();   // Collecting the input
                String  pass = new String(password.getPassword());

                // String pwd = String.copyValueOf(pass);  // converting from array to string
                if(validate_login(user,pass))
                {
                    user_name=username.getText().toString();

                    if(Type.equals("Admin"))
                    {

                       Main_page obj = null;
                        try {
                            obj = new Main_page();
                        } catch (Exception ex) {
                            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        obj.setVisible(true);
                        this.setVisible(false);
                    }
                    //            else{
                        //         screen1.setVisible(rootPaneCheckingEnabled);
                        //          this.setVisible(false);
                        //          System.out.println("Ok"); }

                }
                else
                JOptionPane.showMessageDialog(null,"Incorrect Username or Login");
            }
        }
    }//GEN-LAST:event_LoginKeyPressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(username.getText().length()==0)  // Checking for empty field
            {
                System.out.println("No Entry in text filed");
                JOptionPane.showMessageDialog(null,"No text in username textfield");
            }
            else if(password.getPassword().equals("null")) { // Checking for empty field
                System.out.println("No Entry in password filed");
                JOptionPane.showMessageDialog(null,"No text in password textfield");}
            else{
                String user = username.getText();   // Collecting the input
                String  pass = new String(password.getPassword());

                // String pwd = String.copyValueOf(pass);  // converting from array to string
                if(validate_login(user,pass))
                {
                    user_name=username.getText().toString();

                    if(Type.equals("Admin"))
                    {

                        Main_page obj = null;
                        try {
                            obj = new Main_page();
                        } catch (Exception ex) {
                            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        obj.setVisible(true);
                        this.setVisible(false);
                    }
                    //            else{
                        //         screen1.setVisible(rootPaneCheckingEnabled);
                        //          this.setVisible(false);
                        //          System.out.println("Ok"); }

                }
                else
                JOptionPane.showMessageDialog(null,"Incorrect Username or Login");
            }
        }
    }//GEN-LAST:event_passwordKeyPressed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

   
    

                                         

   
    
    private boolean validate_login(String username,String password) {
   try{           
       //Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
      // Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/javademo?" + "user=root&password=");     
       PreparedStatement pst = conn.prepareStatement("Select * from users where user_name=? and Password=?");
       pst.setString(1, username); 
       pst.setString(2, password);
       ResultSet rs = pst.executeQuery();  
      
       if(rs.next()) 
       {    Type= rs.getString(4);  
           
           return true; 
           
       }
       else
           return false;            
   }
   catch(Exception e){
       e.printStackTrace();
       return false;
   }       
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
try{
Class.forName("com.mysql.jdbc.Driver");
conn =(Connection) DriverManager.getConnection("jdbc:mysql://localhost/inventory","root","");      

 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            //    new login().setVisible(true);
            }
        });
    }
  catch(ClassNotFoundException | SQLException e){
    System.out.println("Driver not loaded");
    
}       
    }
                      
   
    // End of variables declaration  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
